on:
  push:
    branches: [ gitaction2 ]

env:
  DOCKER_IMAGE_TAG_NAME: filter-pattern

jobs:
  build-and-docker-push:
    runs-on: ubuntu-20.04 # 실행환경

    # 실행 스텝 지정
    steps:
      - uses: actions/checkout@v3

      # java version 지정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: copy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "./build/libs/*.jar"
          target: "~"

      - name: SSH Commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            SOURCE_DIR=~/build/libs
            FILE_NAME=`find $SOURCE_DIR/*.jar -printf "%f\n"`
            PID=`ps -ef | grep occupying | grep sudo | grep -v "bash -c" | awk '{print $2}'`

            if [ -z "$PID" ]; then
                    echo "#### THERE IS NO PROCESS ####"
            else
                    echo "#### KILL $PID ####"
                    sudo kill $PID
            fi

            echo "#### RUN $SOURCE_DIR/$FILE_NAME ####"
            
            export DB_URL=${{secrets.DB_URL}}
            export DB_USERNAME=${{secrets.DB_USERNAME}}
            export DB_PASSWORD=${{secrets.DB_PASSWORD}}
            nohup java -jar $SOURCE_DIR/$FILE_NAME & > /dev/null 2>&1 &